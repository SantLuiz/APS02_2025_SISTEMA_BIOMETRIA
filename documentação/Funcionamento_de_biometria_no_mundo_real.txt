‚öôÔ∏è 1. Fluxo geral de um sistema biom√©trico de catraca

Cadastro (enrollment)

O funcion√°rio coloca o dedo em um leitor biom√©trico.

O leitor n√£o salva a imagem da digital (isso √© muito importante).

Ele extrai caracter√≠sticas √∫nicas ‚Äî chamadas min√∫cias (pontos de bifurca√ß√£o, termina√ß√µes de sulcos, curvaturas, etc.).

Essas min√∫cias s√£o convertidas em um template biom√©trico ‚Äî uma representa√ß√£o matem√°tica compacta, como um vetor num√©rico ou um hash.

Esse template √© ent√£o enviado para o servidor e armazenado no banco de dados seguro associado ao funcion√°rio.

Verifica√ß√£o (authentication)

Quando o funcion√°rio coloca o dedo novamente:

O leitor gera um novo template a partir da digital atual.

Esse template √© comparado com o template armazenado para aquele funcion√°rio (ou com todos, se n√£o houver identifica√ß√£o pr√©via).

Um algoritmo de correspond√™ncia (matcher) calcula a similaridade (ex: 98% de correspond√™ncia).

Se o valor for maior que o limiar (threshold) configurado, o acesso √© autorizado.

A catraca ent√£o recebe um sinal el√©trico ou comando l√≥gico para destravar o mecanismo.

üß† 2. Sobre o armazenamento

Os dados n√£o s√£o imagens de digitais ‚Äî isso √© fundamental por raz√µes de seguran√ßa e performance.

O que realmente √© salvo √©:

User ID | Template (vetor ou hash) | N√≠vel de acesso | Data de cadastro


Por exemplo:

{
  "user_id": "12345",
  "fingerprint_template": "A47F23B9C1E9D5...",
  "access_level": 2,
  "last_update": "2025-10-18"
}

Onde esse template fica salvo:

Em banco de dados local da catraca (para valida√ß√£o offline, caso perca conex√£o).

E/ou em um servidor central, que sincroniza os dados entre todas as catracas.

Muitos sistemas usam bancos relacionais (PostgreSQL, MySQL) ou NoSQL (MongoDB) dependendo da arquitetura.

üåê 3. Troca de dados (comunica√ß√£o)

Normalmente, essa comunica√ß√£o entre catracas e servidor ocorre via rede:

TCP/IP ou MQTT em redes locais (LAN).

Em sistemas modernos, APIs REST ou gRPC s√£o usadas para comunica√ß√£o com o servidor.

Os dados s√£o criptografados (TLS/SSL) para evitar intercepta√ß√£o.

A catraca pode enviar mensagens do tipo:

{
  "event": "access_attempt",
  "device_id": "catraca_01",
  "user_template": "B12D3F...",
  "timestamp": "2025-10-18T10:42:00Z"
}


E o servidor responde com algo como:

{
  "status": "authorized",
  "user_name": "Luiz Pereira",
  "access_level": 2
}

üß∞ 4. Tecnologias reais envolvidas

Leitores biom√©tricos: ZKTeco, Suprema, Futronic, DigitalPersona, etc.

Protocolos: RS-485, TCP/IP, ou USB para comunica√ß√£o.

Banco de dados: PostgreSQL, MongoDB, ou banco embarcado (SQLite).

Software de controle: normalmente desenvolvido em C++, Java ou Python.

API ou SDK do fabricante: para capturar templates e fazer matching.

üîê 5. Seguran√ßa

Os templates biom√©tricos s√£o criptografados (geralmente AES-256).

Jamais se guarda a imagem bruta da digital ‚Äî apenas o template matem√°tico.

Cada template √© in√∫til fora do sistema (n√£o pode ser revertido em imagem).

Logs de acesso e tentativas ficam registrados com hora, usu√°rio e catraca.

üè¢ 6. Resumindo visualmente
[Sensor biom√©trico] ‚Üí Extrai caracter√≠sticas ‚Üí Gera template
       ‚Üì
[Microcontrolador / Catra√ßa] ‚Üî [Servidor Central]
       ‚Üì
  Autorizado? ‚Üí Sinal el√©trico ‚Üí Gira a catraca